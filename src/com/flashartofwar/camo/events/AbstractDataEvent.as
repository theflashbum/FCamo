/** * <p>Original Author:  jessefreeman</p> * <p>Class File: AbstractDataEvent.as</p> * * <p>Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions:</p> * * <p>The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software.</p> * * <p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE.</p> * * <p>Licensed under The MIT License</p> * <p>Redistributions of files must retain the above copyright notice.</p> * * <p>Revisions<br/> *     2.0  Initial version Jan 7, 2009</p> * */package com.flashartofwar.camo.events{    import flash.events.Event;    /**     * @author jessefreeman     */    public class AbstractDataEvent extends Event    {        public var data:Object;        /**         * <p>This Abstract Event allows you to pass a data object along with the         *    event. This is key for messaging and passing up states, values, and         *    references to instance up the event chain.</p>         */        public function AbstractDataEvent(self:AbstractDataEvent, type:String, data:Object = null, bubbles:Boolean = false, cancelable:Boolean = false)        {            super(type, bubbles, cancelable);            this.data = data;        }    }}